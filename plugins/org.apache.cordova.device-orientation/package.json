{
    "version": "0.3.10",
    "name": "org.apache.cordova.device-orientation",
    "cordova_name": "Device Orientation",
    "description": "Cordova Device Orientation Plugin",
    "license": "Apache 2.0",
    "repo": "https://git-wip-us.apache.org/repos/asf/cordova-plugin-device-orientation.git",
    "issue": "https://issues.apache.org/jira/browse/CB/component/12320637",
    "keywords": [
        "cordova",
        "device",
        "orientation"
    ],
    "platforms": [
        "firefoxos",
        "android",
        "amazon-fireos",
        "ubuntu",
        "blackberry10",
        "ios",
        "wp7",
        "wp8",
        "windows8",
        "tizen",
        "browser"
    ],
    "engines": [],
    "englishdoc": "<!---\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n-->\n\n# org.apache.cordova.device-orientation\n\nThis plugin provides access to the device's compass. The compass is a sensor\nthat detects the direction or heading that the device is pointed, typically\nfrom the top of the device.  It measures the heading in degrees from 0 to\n359.99, where 0 is north.\n\nAccess is via a global `navigator.compass` object.\n\nAlthough the object is attached to the global scoped `navigator`, it is not available until after the `deviceready` event.\n\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n    function onDeviceReady() {\n        console.log(navigator.compass);\n    }\n\n## Installation\n\n    cordova plugin add org.apache.cordova.device-orientation\n\n## Supported Platforms\n\n- Amazon Fire OS\n- Android\n- BlackBerry 10\n- Browser\n- Firefox OS\n- iOS\n- Tizen\n- Windows Phone 7 and 8 (if available in hardware)\n- Windows 8\n\n## Methods\n\n- navigator.compass.getCurrentHeading\n- navigator.compass.watchHeading\n- navigator.compass.clearWatch\n\n## navigator.compass.getCurrentHeading\n\nGet the current compass heading. The compass heading is returned via a `CompassHeading`\nobject using the `compassSuccess` callback function.\n\n    navigator.compass.getCurrentHeading(compassSuccess, compassError);\n\n### Example\n\n    function onSuccess(heading) {\n        alert('Heading: ' + heading.magneticHeading);\n    };\n\n    function onError(error) {\n        alert('CompassError: ' + error.code);\n    };\n\n    navigator.compass.getCurrentHeading(onSuccess, onError);\n\n## navigator.compass.watchHeading\n\nGets the device's current heading at a regular interval. Each time the heading\nis retrieved, the `headingSuccess` callback function is executed.\n\nThe returned watch ID references the compass watch interval. The watch\nID can be used with `navigator.compass.clearWatch` to stop watching the navigator.compass.\n\n    var watchID = navigator.compass.watchHeading(compassSuccess, compassError, [compassOptions]);\n\n`compassOptions` may contain the following keys:\n\n- __frequency__: How often to retrieve the compass heading in milliseconds. _(Number)_ (Default: 100)\n- __filter__: The change in degrees required to initiate a watchHeading success callback. When this value is set, __frequency__ is ignored. _(Number)_\n\n### Example\n\n    function onSuccess(heading) {\n        var element = document.getElementById('heading');\n        element.innerHTML = 'Heading: ' + heading.magneticHeading;\n    };\n\n    function onError(compassError) {\n        alert('Compass error: ' + compassError.code);\n    };\n\n    var options = {\n        frequency: 3000\n    }; // Update every 3 seconds\n\n    var watchID = navigator.compass.watchHeading(onSuccess, onError, options);\n\n\n### Browser Quirks\n\nValues for current heading are randomly generated in order to simulate the compass.\n\n### iOS Quirks\n\nOnly one `watchHeading` can be in effect at one time in iOS.  If a\n`watchHeading` uses a filter, calling `getCurrentHeading` or\n`watchHeading` uses the existing filter value to specify heading\nchanges. Watching heading changes with a filter is more efficient than\nwith time intervals.\n\n### Amazon Fire OS Quirks\n\n- `filter` is not supported.\n\n### Android Quirks\n\n- No support for `filter`.\n\n### Firefox OS Quirks\n\n- No support for `filter`.\n\n### Tizen Quirks\n\n- No support for `filter`.\n\n### Windows Phone 7 and 8 Quirks\n\n- No support for `filter`.\n\n## navigator.compass.clearWatch\n\nStop watching the compass referenced by the watch ID parameter.\n\n    navigator.compass.clearWatch(watchID);\n\n- __watchID__: The ID returned by `navigator.compass.watchHeading`.\n\n### Example\n\n    var watchID = navigator.compass.watchHeading(onSuccess, onError, options);\n\n    // ... later on ...\n\n    navigator.compass.clearWatch(watchID);\n\n## CompassHeading\n\nA `CompassHeading` object is returned to the `compassSuccess` callback function.\n\n### Properties\n\n- __magneticHeading__: The heading in degrees from 0-359.99 at a single moment in time. _(Number)_\n\n- __trueHeading__: The heading relative to the geographic North Pole in degrees 0-359.99 at a single moment in time. A negative value indicates that the true heading can't be determined.  _(Number)_\n\n- __headingAccuracy__: The deviation in degrees between the reported heading and the true heading. _(Number)_\n\n- __timestamp__: The time at which this heading was determined.  _(milliseconds)_\n\n\n### Amazon Fire OS Quirks\n\n- `trueHeading` is not supported, but reports the same value as `magneticHeading`\n\n- `headingAccuracy` is always 0 because there is no difference between the `magneticHeading` and `trueHeading`\n\n### Android Quirks\n\n- The `trueHeading` property is not supported, but reports the same value as `magneticHeading`.\n\n- The `headingAccuracy` property is always 0 because there is no difference between the `magneticHeading` and `trueHeading`.\n\n### Firefox OS Quirks\n\n- The `trueHeading` property is not supported, but reports the same value as `magneticHeading`.\n\n- The `headingAccuracy` property is always 0 because there is no difference between the `magneticHeading` and `trueHeading`.\n\n### iOS Quirks\n\n- The `trueHeading` property is only returned for location services enabled via `navigator.geolocation.watchLocation()`.\n\n- For iOS 4 devices and above, heading factors in the device's current orientation, and does not reference its absolute position, for apps that supports that orientation.\n\n## CompassError\n\nA `CompassError` object is returned to the `compassError` callback function when an error occurs.\n\n### Properties\n\n- __code__: One of the predefined error codes listed below.\n\n### Constants\n\n- `CompassError.COMPASS_INTERNAL_ERR`\n- `CompassError.COMPASS_NOT_SUPPORTED`\n\n"
}